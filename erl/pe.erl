-module(pe).
-import(lists).
-import(num).
-import(io).
-export([ prob1/1, prob2/3, prob3/1, prob4/0, prob5/1 ]).

%% If we list all the natural numbers below 10 that are multiples of 3 or 5, we
%% get 3, 5, 6 and 9. The sum of these multiples is 23.
%% 
%% Find the sum of all the multiples of 3 or 5 below 1000.
%%

prob1( N, Limit, Res ) when N =:= Limit -> Res;
prob1( N, Limit, Res ) when N rem 3 =:= 0; N rem 5 =:= 0 -> prob1( N+1, Limit, N+Res );
prob1( N, Limit, Res ) -> prob1( N+1, Limit, Res ).
prob1( N ) -> prob1( 1, N, 0 ).


%% Each new term in the Fibonacci sequence is generated by adding the previous
%% two terms. By starting with 1 and 2, the first 10 terms will be:
%% 
%% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%% 
%% Find the sum of all the even-valued terms in the sequence which do not exceed
%% four million.

prob2( _, Y, Limit, Res ) when Y > Limit -> Res;
prob2( X, Y, Limit, Res ) when Y rem 2 =:= 0  -> prob2( Y, X+Y, Limit, Y + Res );
prob2( X, Y, Limit, Res ) -> prob2( Y, X+Y, Limit, Res ).
prob2( X, Y, N ) -> prob2( X, Y, N, 0 ).

%% The prime factors of 13195 are 5, 7, 13 and 29.
%% 
%% What is the largest prime factor of the number 600851475143 ?

prob3( N ) ->
    case num:xfactors(N) of
        {X,_} when X =:= 1 -> N;
        {_,Y} -> prob3(Y)
    end.

%% A palindromic number reads the same both ways. The largest palindrome made
%% from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
%% 
%% Find the largest palindrome made from the product of two 3-digit numbers.

prob4() -> lists:max([ X*Y || X <- lists:seq(100,999),
                              Y <- lists:seq(100,999),
                              num:is_palindrome( X*Y) ]
                    ).


prob5( N, Res ) when N =:= 1 -> Res;
prob5( N, Res ) when Res rem N =:= 0 -> prob5( N-1, Res );
prob5( N, Res ) -> prob5( N-1, N*Res ).
prob5( Limit ) -> prob5( Limit,  1 ).
